name: Vérification Exercice DOM

on:
  push:
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Cloner le dépôt
        uses: actions/checkout@v3

      - name: Installer Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Installer les dépendances
        run: |
          npm init -y
          npm install -D playwright http-server @playwright/test

      - name: Installer les navigateurs Playwright
        run: npx playwright install

      - name: Lancer serveur local
        run: |
          npx http-server -p 8080 -c-1 &
          sleep 2

      - name: Créer le test
        run: |
          mkdir tests
          echo "const fs = require('fs');" > tests/exo.spec.js
          echo "const { test, expect } = require('@playwright/test');" >> tests/exo.spec.js
          echo "test('Le bouton déclenche un message Bravo', async ({ page }) => {" >> tests/exo.spec.js
          echo "  try {" >> tests/exo.spec.js
          echo "    await page.goto('http://localhost:8080');" >> tests/exo.spec.js
          echo "    const btn = page.locator('#clickme');" >> tests/exo.spec.js
          echo "    await expect(btn).toHaveCount(1);" >> tests/exo.spec.js
          echo "    await btn.click();" >> tests/exo.spec.js
          echo "    const bravo = page.locator('text=Bravo!');" >> tests/exo.spec.js
          echo "    await expect(bravo).toHaveCount(1);" >> tests/exo.spec.js
          echo "    fs.writeFileSync('resultat.txt', '✅ Test réussi');" >> tests/exo.spec.js
          echo "  } catch (error) {" >> tests/exo.spec.js
          echo "    console.error('❌ Erreur de test:', error);" >> tests/exo.spec.js
          echo "    fs.writeFileSync('resultat.txt', '❌ Le test a échoué');" >> tests/exo.spec.js
          echo "    throw error;" >> tests/exo.spec.js
          echo "  }" >> tests/exo.spec.js
          echo "});" >> tests/exo.spec.js

      - name: Lancer le test
        run: npx playwright test || (echo "::error::Le test a échoué." && exit 1)

      - name: Ajouter le badge dans README.md
        run: |
          echo "" >> README.md
          echo "## Statut du test" >> README.md
          echo "" >> README.md
          echo "![Statut du test](https://github.com/${{ github.repository }}/actions/workflows/test.yml/badge.svg)" >> README.md

      - name: Ajouter et pousser resultat.txt et README.md
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add resultat.txt README.md
          git commit -m "Ajout automatique du resultat et du badge"
          git push
        continue-on-error: true
